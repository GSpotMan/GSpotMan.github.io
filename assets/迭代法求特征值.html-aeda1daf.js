import{_ as s,o as a,c as p,a as t,b as n,d as o,e}from"./app-bb29081e.js";const c="/assets/image-6-b488c108.png",l="/assets/image-7-9f2df71f.png",u={},i=n("h1",{id:"迭代求特征值",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#迭代求特征值","aria-hidden":"true"},"#"),o(" 迭代求特征值")],-1),k=n("p",null,"本文主要介绍幂迭代、逆幂迭代求最大最小特征值与QR分解和QR算法。",-1),r=e('<h2 id="幂迭代和逆幂迭代" tabindex="-1"><a class="header-anchor" href="#幂迭代和逆幂迭代" aria-hidden="true">#</a> 幂迭代和逆幂迭代</h2><figure><img src="'+c+`" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 幂迭代</span>
<span class="token keyword">def</span> <span class="token function">power_iteration</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> iterations<span class="token punctuation">,</span> x<span class="token punctuation">,</span> aikten<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> tol<span class="token operator">=</span><span class="token number">1e-6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>
        i <span class="token operator">=</span> np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> x <span class="token operator">/</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        y <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>A<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
        t <span class="token operator">=</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        e_1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>y <span class="token operator">/</span> t <span class="token operator">-</span> x<span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> e_1 <span class="token operator">&lt;</span> tol<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">]</span>
        z <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>A<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
        t <span class="token operator">=</span> z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        e_2 <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>y <span class="token operator">/</span> t <span class="token operator">-</span> x<span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> e_2 <span class="token operator">&lt;</span> tol <span class="token keyword">and</span> e_1 <span class="token operator">&gt;</span> <span class="token number">100</span> <span class="token operator">*</span> tol<span class="token punctuation">:</span>
            lambda_1 <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>lambda_1<span class="token punctuation">,</span> z <span class="token operator">+</span> lambda_1 <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span>lambda_1<span class="token punctuation">,</span> z <span class="token operator">-</span> lambda_1 <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> aikten <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            x <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">*</span> y <span class="token operator">-</span> z <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>z <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> y <span class="token operator">+</span> x<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            x <span class="token operator">=</span> z

<span class="token comment"># 逆幂迭代</span>
<span class="token keyword">def</span> <span class="token function">inverse_power_iteration</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> iterations<span class="token punctuation">,</span> x<span class="token punctuation">,</span> aikten<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> tol<span class="token operator">=</span><span class="token number">1e-6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>
        i <span class="token operator">=</span> np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        x <span class="token operator">=</span> x <span class="token operator">/</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        y <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>A<span class="token punctuation">,</span>x<span class="token punctuation">)</span>
        t <span class="token operator">=</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        e_1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>y <span class="token operator">/</span> t <span class="token operator">-</span> x<span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> e_1 <span class="token operator">&lt;</span> tol<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">]</span>
        z <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>A<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
        t <span class="token operator">=</span> z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        e_2 <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>y <span class="token operator">/</span> t <span class="token operator">-</span> x<span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> e_2 <span class="token operator">&lt;</span> tol <span class="token keyword">and</span> e_1 <span class="token operator">&gt;</span> <span class="token number">100</span> <span class="token operator">*</span> tol<span class="token punctuation">:</span>
            lambda_1 <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>lambda_1<span class="token punctuation">,</span> z <span class="token operator">+</span> lambda_1 <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span>lambda_1<span class="token punctuation">,</span> z <span class="token operator">-</span> lambda_1 <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> aikten <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
            x <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">*</span> y <span class="token operator">-</span> z <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>z <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> y <span class="token operator">+</span> x<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            x <span class="token operator">=</span> z

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>未启用Aikten加速:</strong><br> 所得结果如下所示，其中需要迭代12之后刚好收敛。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">8.</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8.</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">12.</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">15.</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">18.</span><span class="token punctuation">,</span> <span class="token number">26.</span><span class="token punctuation">,</span> <span class="token number">12.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

res <span class="token operator">=</span> power_iteration<span class="token punctuation">(</span>A<span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
inverse_res <span class="token operator">=</span> inverse_power_iteration<span class="token punctuation">(</span>A<span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;求解所得特征值数量：&quot;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;解得特征值分别为：&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> res<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;解得特征向量分别为：&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> res<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;求解所得特征值数量：&quot;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>inverse_res<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;解得特征值分别为：&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> inverse_res<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;解得特征向量分别为：&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> inverse_res<span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>求解所得特征值数量： 1
解得特征值分别为： [3.9999996821089994]
解得特征向量分别为： [array([-3.99999873, -3.99999905,  3.99999968])]
求解所得特征值数量： 1
解得特征值分别为： [-1.000000178814004]
解得特征向量分别为： [array([-1.19209293e-07,  5.00000000e-01, -1.00000018e+00])]
</code></pre><p><strong>启用Aikten加速:</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>res <span class="token operator">=</span> power_iteration<span class="token punctuation">(</span>A<span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;求解所得特征值数量：&quot;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;解得特征值分别为：&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> res<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;解得特征向量分别为：&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> res<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>求解所得特征值数量： 1
解得特征值分别为： [3.9999996188903744]
解得特征向量分别为： [array([-3.9999985 , -3.99999887,  3.99999962])]
</code></pre><p>虽然是17步收敛，但是因为代码的原因，原来迭代一次其实是迭代了两次（加入了判断最大特征值绝对值有两个的情况），而且如果判断误差条件改为特征值而非特征向量的话，对特征值进行加速更为合理。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 艾特肯加速</span>
<span class="token keyword">if</span> _ <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    lambda_estimate <span class="token operator">=</span> lambda_estimate <span class="token operator">-</span> <span class="token punctuation">(</span>lambda_estimate <span class="token operator">-</span> lambda_prev<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token punctuation">(</span>lambda_estimate <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> lambda_prev <span class="token operator">+</span> lambda_prev_prev<span class="token punctuation">)</span>

<span class="token comment"># 更新迭代变量</span>
    lambda_prev_prev <span class="token operator">=</span> lambda_prev
    lambda_prev <span class="token operator">=</span> lambda_estimate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="qr分解与qr算法" tabindex="-1"><a class="header-anchor" href="#qr分解与qr算法" aria-hidden="true">#</a> QR分解与QR算法</h2><figure><img src="`+l+`" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># QR分解</span>
<span class="token keyword">def</span> <span class="token function">qr_decomposition</span><span class="token punctuation">(</span>A<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">)</span><span class="token punctuation">:</span>
    n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span>
    Q <span class="token operator">=</span> np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>A<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        t <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>A<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> t <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
        <span class="token keyword">if</span> A<span class="token punctuation">[</span>i<span class="token punctuation">,</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            t <span class="token operator">=</span> <span class="token operator">-</span>t
        v <span class="token operator">=</span> <span class="token operator">-</span>A<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span>
        v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+=</span> t
        A<span class="token punctuation">[</span>i<span class="token punctuation">,</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> t
        A<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
        t_0 <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">/</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>v<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
            t <span class="token operator">=</span> t_0 <span class="token operator">*</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>v<span class="token punctuation">,</span> A<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">,</span> k<span class="token punctuation">]</span><span class="token punctuation">)</span>
            A<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">,</span> k<span class="token punctuation">]</span> <span class="token operator">=</span> A<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">,</span> k<span class="token punctuation">]</span> <span class="token operator">-</span> t<span class="token operator">*</span>v
        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
            t <span class="token operator">=</span> t_0 <span class="token operator">*</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>Q<span class="token punctuation">[</span>k<span class="token punctuation">,</span> i<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
            Q<span class="token punctuation">[</span>k<span class="token punctuation">,</span> i<span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> Q<span class="token punctuation">[</span>k<span class="token punctuation">,</span> i<span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">-</span> t<span class="token operator">*</span>v
    <span class="token keyword">return</span>  Q<span class="token punctuation">,</span>A
<span class="token comment"># QR算法</span>
<span class="token keyword">def</span> <span class="token function">qr_resolve</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>
        Q<span class="token punctuation">,</span>R<span class="token operator">=</span>qr_decomposition<span class="token punctuation">(</span>A<span class="token punctuation">)</span>
        A <span class="token operator">=</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>R<span class="token punctuation">,</span>Q<span class="token punctuation">)</span>
    eigenvalues <span class="token operator">=</span> np<span class="token punctuation">.</span>diagonal<span class="token punctuation">(</span>A<span class="token punctuation">)</span>
    <span class="token keyword">return</span> eigenvalues
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">8.</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8.</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">12.</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">15.</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">18.</span><span class="token punctuation">,</span> <span class="token number">26.</span><span class="token punctuation">,</span> <span class="token number">12.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>qr_resolve<span class="token punctuation">(</span>A<span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>[ 4.00000001  1.99999996 -0.99999997]
</code></pre>`,17);function d(v,m){return a(),p("div",null,[i,k,t(" more "),r])}const y=s(u,[["render",d],["__file","迭代法求特征值.html.vue"]]);export{y as default};
