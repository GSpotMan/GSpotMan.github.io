const n=JSON.parse('{"key":"v-5c6753e0","path":"/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E6%B1%82%E8%A7%A3(%E8%BF%AD%E4%BB%A3%E6%B3%95).html","title":"线性方程组求解(迭代法)","lang":"zh-CN","frontmatter":{"tittle":112,"icon":"pen-to-square","date":"2023-10-8","category":["课程学习"],"timeline":false,"tag":["LU","数值分析"],"description":"线性方程组求解(迭代法) import numpy as np import pandas as pd import time def jacobi_iteration(A, b, x0, max_iterations=100, tolerance=1e-6): n = len(A) x = x0.copy().astype(float) iterations = [] for k in range(max_iterations): x_new = np.zeros_like(x) for i in range(n): x_new[i] = (b[i] - np.dot(A[i, :i], x[:i]) - np.dot(A[i, i+1:], x[i+1:])) / A[i, i] x_new[i] =\\"%.8f\\" %x_new[i] iterations.append(x_new) if np.linalg.norm(x_new - x, ord=np.inf) &lt; tolerance: return x_new, iterations x = x_new return x, iterations def gauss_seidel_iteration(A, b, x0, max_iterations=100, tolerance=1e-6): n = len(A) x = x0.copy().astype(float) iterations = [] for k in range(max_iterations): for i in range(n): x[i] = (b[i] - np.dot(A[i, :i], x[:i]) - np.dot(A[i, i+1:], x[i+1:])) / A[i, i] x[i] = \\"%.8f\\" % x[i] iterations.append(x.copy()) if np.linalg.norm(A @ x - b, ord=np.inf) &lt; tolerance: return x, iterations return x, iterations def sor_iteration(A, b, x0, omega, max_iterations=100, tolerance=1e-6): n = len(A) x = x0.copy().astype(float) iterations = [] for k in range(max_iterations): for i in range(n): x[i] = (1 - omega) * x[i] + omega * (b[i] - np.dot(A[i, :i], x[:i]) - np.dot(A[i, i+1:], x[i+1:]))/ A[i, i] x[i] = \\"%.8f\\" % x[i] iterations.append(x.copy()) if np.linalg.norm(A @ x - b, ord=np.inf) &lt; tolerance: return x, iterations return x, iterations","head":[["meta",{"property":"og:url","content":"https://GSpotMan.github.io/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E6%B1%82%E8%A7%A3(%E8%BF%AD%E4%BB%A3%E6%B3%95).html"}],["meta",{"property":"og:site_name","content":"Lzy"}],["meta",{"property":"og:title","content":"线性方程组求解(迭代法)"}],["meta",{"property":"og:description","content":"线性方程组求解(迭代法) import numpy as np import pandas as pd import time def jacobi_iteration(A, b, x0, max_iterations=100, tolerance=1e-6): n = len(A) x = x0.copy().astype(float) iterations = [] for k in range(max_iterations): x_new = np.zeros_like(x) for i in range(n): x_new[i] = (b[i] - np.dot(A[i, :i], x[:i]) - np.dot(A[i, i+1:], x[i+1:])) / A[i, i] x_new[i] =\\"%.8f\\" %x_new[i] iterations.append(x_new) if np.linalg.norm(x_new - x, ord=np.inf) &lt; tolerance: return x_new, iterations x = x_new return x, iterations def gauss_seidel_iteration(A, b, x0, max_iterations=100, tolerance=1e-6): n = len(A) x = x0.copy().astype(float) iterations = [] for k in range(max_iterations): for i in range(n): x[i] = (b[i] - np.dot(A[i, :i], x[:i]) - np.dot(A[i, i+1:], x[i+1:])) / A[i, i] x[i] = \\"%.8f\\" % x[i] iterations.append(x.copy()) if np.linalg.norm(A @ x - b, ord=np.inf) &lt; tolerance: return x, iterations return x, iterations def sor_iteration(A, b, x0, omega, max_iterations=100, tolerance=1e-6): n = len(A) x = x0.copy().astype(float) iterations = [] for k in range(max_iterations): for i in range(n): x[i] = (1 - omega) * x[i] + omega * (b[i] - np.dot(A[i, :i], x[:i]) - np.dot(A[i, i+1:], x[i+1:]))/ A[i, i] x[i] = \\"%.8f\\" % x[i] iterations.append(x.copy()) if np.linalg.norm(A @ x - b, ord=np.inf) &lt; tolerance: return x, iterations return x, iterations"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-14T19:11:16.000Z"}],["meta",{"property":"article:author","content":"Lzy"}],["meta",{"property":"article:tag","content":"LU"}],["meta",{"property":"article:tag","content":"数值分析"}],["meta",{"property":"article:published_time","content":"2023-10-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-14T19:11:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线性方程组求解(迭代法)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-14T19:11:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lzy\\",\\"url\\":\\"https://GSpotMan.com\\"}]}"]]},"headers":[{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]}],"git":{"createdTime":1697310676000,"updatedTime":1697310676000,"contributors":[{"name":"GSpotMan","email":"964600114@qq.com","commits":1}]},"readingTime":{"minutes":6.96,"words":2088},"filePathRelative":"课程学习/数值分析/线性方程组求解(迭代法).md","localizedDate":"2023年10月8日","excerpt":"<h1> 线性方程组求解(迭代法)</h1>\\n<figure><figcaption></figcaption></figure>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> numpy <span class=\\"token keyword\\">as</span> np\\n<span class=\\"token keyword\\">import</span> pandas <span class=\\"token keyword\\">as</span> pd\\n<span class=\\"token keyword\\">import</span> time\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">jacobi_iteration</span><span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">,</span> x0<span class=\\"token punctuation\\">,</span> max_iterations<span class=\\"token operator\\">=</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> tolerance<span class=\\"token operator\\">=</span><span class=\\"token number\\">1e-6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    n <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">)</span>\\n    x <span class=\\"token operator\\">=</span> x0<span class=\\"token punctuation\\">.</span>copy<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>astype<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">float</span><span class=\\"token punctuation\\">)</span>\\n    iterations <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">for</span> k <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>max_iterations<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        x_new <span class=\\"token operator\\">=</span> np<span class=\\"token punctuation\\">.</span>zeros_like<span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n             x_new<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-</span> np<span class=\\"token punctuation\\">.</span>dot<span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">:</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> x<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">:</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> np<span class=\\"token punctuation\\">.</span>dot<span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> x<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">]</span>\\n             x_new<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"%.8f\\"</span> <span class=\\"token operator\\">%</span>x_new<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n        iterations<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>x_new<span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">if</span> np<span class=\\"token punctuation\\">.</span>linalg<span class=\\"token punctuation\\">.</span>norm<span class=\\"token punctuation\\">(</span>x_new <span class=\\"token operator\\">-</span> x<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">ord</span><span class=\\"token operator\\">=</span>np<span class=\\"token punctuation\\">.</span>inf<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> tolerance<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> x_new<span class=\\"token punctuation\\">,</span> iterations\\n        x <span class=\\"token operator\\">=</span> x_new\\n    <span class=\\"token keyword\\">return</span> x<span class=\\"token punctuation\\">,</span> iterations\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">gauss_seidel_iteration</span><span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">,</span> x0<span class=\\"token punctuation\\">,</span> max_iterations<span class=\\"token operator\\">=</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> tolerance<span class=\\"token operator\\">=</span><span class=\\"token number\\">1e-6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    n <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">)</span>\\n    x <span class=\\"token operator\\">=</span> x0<span class=\\"token punctuation\\">.</span>copy<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>astype<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">float</span><span class=\\"token punctuation\\">)</span>\\n    iterations <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">for</span> k <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>max_iterations<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            x<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-</span> np<span class=\\"token punctuation\\">.</span>dot<span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">:</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> x<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">:</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> np<span class=\\"token punctuation\\">.</span>dot<span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> x<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">]</span>\\n            x<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"%.8f\\"</span> <span class=\\"token operator\\">%</span> x<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n        iterations<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">.</span>copy<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">if</span> np<span class=\\"token punctuation\\">.</span>linalg<span class=\\"token punctuation\\">.</span>norm<span class=\\"token punctuation\\">(</span>A @ x <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">ord</span><span class=\\"token operator\\">=</span>np<span class=\\"token punctuation\\">.</span>inf<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> tolerance<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> x<span class=\\"token punctuation\\">,</span> iterations\\n    <span class=\\"token keyword\\">return</span> x<span class=\\"token punctuation\\">,</span> iterations\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">sor_iteration</span><span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">,</span> x0<span class=\\"token punctuation\\">,</span> omega<span class=\\"token punctuation\\">,</span> max_iterations<span class=\\"token operator\\">=</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> tolerance<span class=\\"token operator\\">=</span><span class=\\"token number\\">1e-6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    n <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">)</span>\\n    x <span class=\\"token operator\\">=</span> x0<span class=\\"token punctuation\\">.</span>copy<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>astype<span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">float</span><span class=\\"token punctuation\\">)</span>\\n    iterations <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">for</span> k <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>max_iterations<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            x<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> omega<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> x<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> omega <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-</span> np<span class=\\"token punctuation\\">.</span>dot<span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">:</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> x<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">:</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> np<span class=\\"token punctuation\\">.</span>dot<span class=\\"token punctuation\\">(</span>A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> x<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">/</span> A<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">]</span>\\n            x<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"%.8f\\"</span> <span class=\\"token operator\\">%</span> x<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n        iterations<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">.</span>copy<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n        <span class=\\"token keyword\\">if</span> np<span class=\\"token punctuation\\">.</span>linalg<span class=\\"token punctuation\\">.</span>norm<span class=\\"token punctuation\\">(</span>A @ x <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">ord</span><span class=\\"token operator\\">=</span>np<span class=\\"token punctuation\\">.</span>inf<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> tolerance<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> x<span class=\\"token punctuation\\">,</span> iterations\\n    <span class=\\"token keyword\\">return</span> x<span class=\\"token punctuation\\">,</span> iterations\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
